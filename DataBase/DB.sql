CREATE DATABASE GBANK;

CREATE TABLE GBANK.USERS (
    ID INT NOT NULL AUTO_INCREMENT,
    USERNAME VARCHAR(50) NOT NULL,
    PASSWORD VARCHAR(50) NOT NULL,
    ISADMIN BOOLEAN NOT NULL DEFAULT FALSE,
    EMAIL VARCHAR(50) NOT NULL,
    ISAPPROVED BOOLEAN NOT NULL DEFAULT FALSE,
    PRIMARY KEY (ID)
);

CREATE TABLE GBANK.ACCOUNTS (
    ID INT NOT NULL AUTO_INCREMENT,
    USER_ID INT NOT NULL,
    ACCOUNT_NUMBER VARCHAR(50) NOT NULL,
    BALANCE INT NOT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY (USER_ID) REFERENCES GBANK.USERS(ID)
);

CREATE TABLE GBANK.TRANSACTIONS (
    ID INT NOT NULL AUTO_INCREMENT,
    ACCOUNT_NUMBER VARCHAR(50) NOT NULL,
    AMOUNT INT NOT NULL,
    TRANSFERED_ACCOUNT_NUMBER VARCHAR(50) NOT NULL,
    TRANSACTION_TYPE VARCHAR(50) NOT NULL,
    TRANSACTION_DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    DESCRIPTION VARCHAR(50) NOT NULL,
    PRIMARY KEY (ID)
);

INSERT INTO GBANK.USERS (USERNAME, PASSWORD, EMAIL) VALUES ('admin', 'admin', 'admin@email.com');
INSERT INTO GBANK.USERS (USERNAME, PASSWORD, EMAIL) VALUES ('GAURAV NV', 'gauravnv', 'gauravnv@gmail.com');

INSERT INTO GBANK.ACCOUNTS (USER_ID, ACCOUNT_NUMBER, BALANCE) VALUES (1, '1234567890', 10000);
INSERT INTO GBANK.ACCOUNTS (USER_ID, ACCOUNT_NUMBER, BALANCE) VALUES (2, '0987654321', 10000);

INSERT INTO GBANK.TRANSACTIONS (
    ACCOUNT_NUMBER,
    AMOUNT,
    TRANSFERED_ACCOUNT_NUMBER,
    TRANSACTION_TYPE,
    TRANSACTION_DATE,
    DESCRIPTION
) VALUES (
    '1234567890',
    1000,
    '0987654321',
    'DEBIT',
    '2020-01-01 00:00:00',
    'DEBITED 1000 FROM 1234567890'
);

-- account statement view based on transactions and accounts table between the dates
CREATE VIEW GBANK.ACCOUNT_STATEMENT AS SELECT
    T.ACCOUNT_NUMBER,
    T.AMOUNT,
    T.TRANSFERED_ACCOUNT_NUMBER,
    T.TRANSACTION_TYPE,
    T.TRANSACTION_DATE,
    T.DESCRIPTION,
    A.BALANCE
FROM GBANK.TRANSACTIONS T,
    GBANK.ACCOUNTS A
WHERE T.ACCOUNT_NUMBER = A.ACCOUNT_NUMBER;


-- USER ACCOUNT VIEW
CREATE VIEW GBANK.USER_ACCOUNT AS SELECT
    U.ID,
    U.USERNAME,
    U.EMAIL,
    U.ISAPPROVED,
    A.ACCOUNT_NUMBER,
    A.BALANCE,
    A.ID AS ACCOUNT_ID
FROM GBANK.USERS U,
    GBANK.ACCOUNTS A
WHERE U.ID = A.USER_ID;

-- USER ACCOUNT STATEMENT
CREATE VIEW GBANK.USER_ACCOUNT_STATEMENT AS SELECT
    U.ID,
    U.USERNAME,
    U.EMAIL,
    U.ISAPPROVED,
    A.ACCOUNT_NUMBER,
    A.BALANCE,
    A.ID AS ACCOUNT_ID,
    S.AMOUNT,
    S.TRANSFERED_ACCOUNT_NUMBER,
    S.TRANSACTION_TYPE,
    S.TRANSACTION_DATE,
    S.DESCRIPTION
FROM GBANK.USERS U,
    GBANK.ACCOUNTS A,
    GBANK.ACCOUNT_STATEMENT S
WHERE U.ID = A.USER_ID AND A.ACCOUNT_NUMBER = S.ACCOUNT_NUMBER;


-- admin view to see all the users and their account details
CREATE VIEW GBANK.ADMIN_USER_ACCOUNT AS SELECT
    U.ID,
    U.USERNAME,
    U.EMAIL,
    U.ISAPPROVED,
    A.ACCOUNT_NUMBER,
    A.BALANCE,
    A.ID AS ACCOUNT_ID
FROM GBANK.USERS U,
    GBANK.ACCOUNTS A
WHERE U.ID = A.USER_ID;


